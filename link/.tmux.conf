# Initially taken from: https://zserge.com/posts/tmux/

# Styling
set-option -g default-terminal screen-256color
set -g pane-border-style 'fg=colour19 bg=colour0'
set -g pane-active-border-style 'bg=colour0 fg=colour9'

# Status bar
set -g status-position bottom
set -g status-justify centre    
set -g status-style 'bg=colour18 fg=colour137'
set -g status-left ''
set -g status-right '#[fg=colour233,bg=colour8] %Y/%m/%d #[fg=colour233,bg=colour8] %H:%M:%S '
set -g status-right-length 50
set -g status-left-length 20
set -g status-interval 1

setw -g window-status-current-style 'fg=colour1 bg=colour19 bold'
setw -g window-status-current-format ' #I#[fg=colour249]:#[fg=colour255]#W#[fg=colour249]#F '

setw -g window-status-style 'fg=colour9 bg=colour18'
setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F '

# History
set -g history-limit 10000

# Window numbers from 1, not from 0, renumber if closed
set -g base-index 1
set-option -g renumber-windows on

# Quick Escape (for vim)
set -s escape-time 0

# Hotkeys using Alt/Option as a modifier
bind-key -n M-n new-window -c "#{pane_current_path}"
bind-key -n M-1 select-window -t :1
bind-key -n M-2 select-window -t :2
bind-key -n M-3 select-window -t :3
bind-key -n M-4 select-window -t :4
bind-key -n M-5 select-window -t :5
bind-key -n M-6 select-window -t :6
bind-key -n M-7 select-window -t :7
bind-key -n M-8 select-window -t :8
bind-key -n M-9 select-window -t :9
bind-key -n M-0 select-window -t :0
bind-key -n M-. select-window -n
bind-key -n M-, select-window -p
bind-key -n M-< swap-window -t -1
bind-key -n M-> swap-window -t +1
bind-key -n M-X confirm-before "kill-window"
bind-key -n M-R command-prompt -I "#W" "rename-window '%%'"

# Shift arrow to switch windows
bind -n S-Left previous-window
bind -n S-Right next-window

# Easy config reload
bind-key -n M-r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded."

# Set easier window split keys
bind-key -n M-h split-window -v -c "#{pane_current_path}"
bind-key -n M-v split-window -h -c "#{pane_current_path}"

# Fullscreen mode
bind-key -n M-f resize-pane -Z

# Pane selection
bind-key -n M-Left select-pane -L
bind-key -n M-Right select-pane -R
bind-key -n M-Up select-pane -U
bind-key -n M-Down select-pane -D

bind-key -n "M-C-Left"  resize-pane -D 10
bind-key -n "M-C-Right" resize-pane -U 10
bind-key -n "M-C-Up"    resize-pane -L 10
bind-key -n "M-C-Down"  resize-pane -R 10

bind-key -n "M-S-Left" run-shell 'old=`tmux display -p "#{pane_index}"`; tmux select-pane -L; tmux swap-pane -t $old'
bind-key -n "M-S-Down" run-shell 'old=`tmux display -p "#{pane_index}"`; tmux select-pane -D; tmux swap-pane -t $old'
bind-key -n "M-S-Up" run-shell 'old=`tmux display -p "#{pane_index}"`; tmux select-pane -U; tmux swap-pane -t $old'
bind-key -n "M-S-Right" run-shell 'old=`tmux display -p "#{pane_index}"`; tmux select-pane -R; tmux swap-pane -t $old'
bind-key -n M-x confirm-before "kill-pane"

bind-key -n M-/ copy-mode
# linux system clipboard
bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -in -selection clipboard"
bind-key -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe-and-cancel "xclip -in -selection clipboard"
# macOS system clipboard
#bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"
#bind-key -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe-and-cancel "pbcopy"

set -g mouse on
set -g mouse-resize-pane on

set-option -g status-keys vi
set-option -g set-titles on
set-option -g set-titles-string 'tmux - #W'
set -g bell-action any
set-option -g visual-bell off
set-option -g set-clipboard off

setw -g mode-keys vi
setw -g monitor-activity on

# Notifications
set -g visual-activity on

# Statusbar
#set -g status-style fg=colour15
#set -g status-left ''
#set -g status-right ''
#set -g status-interval 1

set -g message-style fg=colour0,bg=colour3
setw -g window-status-current-style fg=yellow,bold
setw -g window-status-current-format ' #W '
setw -g window-status-style fg=colour250
setw -g window-status-format ' #W '
setw -g window-status-bell-style fg=colour1

#run-shell ~/.tmux/plugins/tmux-resurrect/resurrect.tmux
#run-shell ~/.tmux/plugins/tmux-continuum/continuum.tmux
