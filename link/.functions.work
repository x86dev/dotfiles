#!/bin/sh

__vbx_env()
{
    VBOX_BRANCH=${1}
    if [ -z "$VBOX_BRANCH" ]; then
        VBOX_BRANCH="trunk"
    fi

    export VBOX_BRANCH

    if [ -z "$MY_VBOX_HOME" ]; then
        MY_VBOX_HOME=${HOME}/vbox
    fi

    if [ -z "$MY_VBOX_TARGET_OS" ]; then
        MY_VBOX_TARGET_OS=linux
    fi

    if [ -z "$MY_VBOX_TARGET_ARCH" ]; then
        ## @todo Detect via $(uname -m)?
        MY_VBOX_TARGET_ARCH=amd64
    fi

    VBOX_PATH_ROOT=${MY_VBOX_HOME}/${VBOX_BRANCH}
    export VBOX_PATH_ROOT

    VBOX_PATH_OUT=${VBOX_PATH_ROOT}/out/${MY_VBOX_TARGET_OS}.${MY_VBOX_TARGET_ARCH}/debug/bin/
    export VBOX_PATH_OUT
}

vbx_build_drivers()
{
    __vbx_env ${1}

    VBOX_DEPS="\
        RuntimeBldProg \
        RuntimeR0 \
        RuntimeR3 \
        VBoxRT \
        VBoxNetFlt-src \
        VBoxNetFlt-sh \
        VBoxNetAdp-src \
        VBoxPci-src \
        HostDrivers-scripts \
        vboxdrv-src"

    ( cd ${VBOX_PATH_ROOT} && kmk BUILD_TYPE=release ${VBOX_DEPS} )
}

vbx_build_all()
{
    __vbx_env ${1}

    ( cd ${VBOX_PATH_ROOT} && kmk && vbx_build_drivers )
}

vbx_dbg()
{
    ( cd ${VBOX_PATH_OUT} && gdb -ex run --args ./VirtualBox --startvm "$1" )
}

vbx_dbg_restore()
{
    ( cd ${VBOX_PATH_OUT} && ./VBoxManage snapshot "$1" restorecurrent && gdb -ex run --args ./VirtualBox --startvm "$1" )
}

vbx_log_filter()
{
    MY_FILE1=${1}
    MY_FILE2=${2}
    MY_FILTER_INCLUDE=${3}
    MY_FILTER_EXCLUDE=${4}

    #MY_FILTER_INCLUDE="ProcessInt\|DMARead\|WriteSDSTS\|ReadINT\|TransferUpdate\|hdaTransfer\|UpdateInt\|MMIORead\|MMIOWrite"

    MY_TRIM_COL_START=26
    MY_LIMIT_LINES=5000

    MY_FILE1_FILTERED=filtered_$(basename $MY_FILE1)
    MY_FILE1_TRIMMED=trimmed_$(basename $MY_FILE1)

    MY_FILE2_FILTERED=filtered_$(basename $MY_FILE2)
    MY_FILE2_TRIMMED=trimmed_$(basename $MY_FILE2)

    head -n ${MY_LIMIT_LINES} ${MY_FILE1} | egrep -v "$MY_FILTER_EXCLUDE" | grep -i "$MY_FILTER_INCLUDE" > ${MY_FILE1_FILTERED}
    head -n ${MY_LIMIT_LINES} ${MY_FILE2} | egrep -v "$MY_FILTER_EXCLUDE" | grep -i "$MY_FILTER_INCLUDE" > ${MY_FILE2_FILTERED}

    cut -b$MY_TRIM_COL_START- ${MY_FILE1_FILTERED} > ${MY_FILE1_TRIMMED}
    cut -b$MY_TRIM_COL_START- ${MY_FILE2_FILTERED} > ${MY_FILE2_TRIMMED}

    tkdiff ${MY_FILE1_TRIMMED} ${MY_FILE2_TRIMMED}

    rm ${MY_FILE1_FILTERED}
    rm ${MY_FILE1_TRIMMED}

    rm ${MY_FILE2_FILTERED}
    rm ${MY_FILE2_TRIMMED}
}

vbx_kill()
{
    pkill -e VirtualBox
    pkill -e VBoxSVC
}

vbx_switch()
{
    __vbx_env ${1}

    cd ${VBOX_PATH_ROOT}/out/${MY_VBOX_TARGET_OS}.${MY_VBOX_TARGET_ARCH}/release/bin/src/ &&
    make &&
    sudo make load &&
    sudo chmod 777 /dev/vbox* &&
    cd ${VBOX_PATH_OUT}/
    ./VirtualBox &
}

vbx_test_loop()
{
    export VBOX_ASSERT=panic
    while true; do
        ${1}
        if [ $? -ne 0 ]; then
            exit
        fi
    done
}
