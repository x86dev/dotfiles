#!/bin/sh

__my_check_root()
{
    if [ $(id -u) -ne 0 ]; then
        return 1
    fi

    return 0
}

__my_check_root_exit()
{
    __my_check_root
    if [ $? -ne 0 ]; then
        echo "This script must be run as root. Exiting."
        exit 1
    fi
}

# $1: Directory to search in
# $2: String to search for
# $3: Search options (grep)
__my_ffind()
{
    find ${1} -type f -exec grep --color=auto -n -H ${3} "$2" {} \;
}

rescue_mount()
{
    MY_MOUNT_POINT=/mnt/rescue

    mkdir -p ${MY_MOUNT_POINT}
    mount /dev/${1} ${MY_MOUNT_POINT}
    for dir in /dev /dev/pts /proc /sys /run; do sudo mount --bind $dir ${MY_MOUNT_POINT}/$dir; done
    sudo cp /proc/mounts ${MY_MOUNT_POINT}/etc/mtab
    mount -o bind /etc/resolv.conf ${MY_MOUNT_POINT}/etc/resolv.conf
    chroot ${MY_MOUNT_POINT} /bin/bash
}

#
# Renames a set of files with same file extension to another
# file extension: rename JPG jpg
#
files_rename_ext()
{
    for file in *.${1}
        do
            mv -v $file ${file%.*}.${2}
        # Another way: mv $file `echo $file | sed 's/\(.*\.\)html/\1php/'`
        # And another: mv $file `basename $file htm` html"
        done
}

#
# Returns the total size of a specific file / wildcard in the current directory.
#
files_get_size()
{
    find . -iname "$1" -print0 | du --files0-from=- -hc | tail -n1
}

pdf_compress()
{
    MY_TEMP_FILE=$(mktemp /tmp/pdf-compress.XXXXXX)
    pdf2ps ${1} ${MY_TEMP_FILE}
    ps2pdf -dPDFSETTINGS=/screen -dDownsampleColorImages=true -dColorImageResolution=200 -dColorImageDownsampleType=/Bicubic ${MY_TEMP_FILE} ${1}
    rm ${MY_TEMP_FILE}
}
