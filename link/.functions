#!/bin/sh

rescue_mount()
{
    MY_MOUNT_POINT=/mnt/rescue

    mkdir -p ${MY_MOUNT_POINT}
    mount /dev/${1} ${MY_MOUNT_POINT}
    for dir in /dev /dev/pts /proc /sys /run; do sudo mount --bind $dir ${MY_MOUNT_POINT}/$dir; done
    sudo cp /proc/mounts ${MY_MOUNT_POINT}/etc/mtab
    mount -o bind /etc/resolv.conf ${MY_MOUNT_POINT}/etc/resolv.conf
    chroot ${MY_MOUNT_POINT} /bin/bash
}

#
# Renames a set of files with same file extension to another
# file extension: rename JPG jpg
#
files_rename_ext()
{
    for file in *.${1}
        do
            mv -v $file ${file%.*}.${2}
        # Another way: mv $file `echo $file | sed 's/\(.*\.\)html/\1php/'`
        # And another: mv $file `basename $file htm` html"
        done
}

#
# Returns the total size of a specific file / wildcard in the current directory.
#
files_get_size()
{
    find . -iname "$1" -print0 | du --files0-from=- -hc | tail -n1
}

pdf_compress()
{
    MY_TEMP_FILE=$(mktemp /tmp/pdf-compress.XXXXXX)
    pdf2ps ${1} ${MY_TEMP_FILE}
    ps2pdf -dPDFSETTINGS=/screen -dDownsampleColorImages=true -dColorImageResolution=200 -dColorImageDownsampleType=/Bicubic ${MY_TEMP_FILE} ${1}
    rm ${MY_TEMP_FILE}
}

handbrake_transcode_file()
{
    if [ -z "$1" ] ; then
        echo "No file to transcode specified"
        return
    else
        MY_TRANSCODE_FILE="$1"
    fi

    if [ -z "$2" ] ; then
        MY_PRESET_NAME="op3"
    else
        MY_PRESET_NAME="$2"
    fi

    MY_PRESET_FILE="$DOTFILES/bin/handbrake/profiles/$MY_PRESET_NAME.json"

    ( cd $(dirname "$MY_TRANSCODE_FILE") && \
      HandBrakeCLI --preset-import-file "$MY_PRESET_FILE" -i "$MY_TRANSCODE_FILE" -o transcoded_$(basename "$MY_TRANSCODE_FILE") --preset="$MY_PRESET_NAME" )
}

handbrake_transcode_dir()
{
    if [ -z "$1" ] ; then
        MY_TRANSCODE_PATH="."
    else
        MY_TRANSCODE_PATH="$1"
    fi

    if [ -z "$2" ] ; then
        MY_PRESET_NAME="op3"
    else
        MY_PRESET_NAME="$2"
    fi

    MY_LOCK_FILE=/tmp/handbrake_transcode_dir.lock
    MY_TRANSCODE_LIST=/tmp/handbrake_transcode_dir.list

    if [ -f "$MY_LOCK_FILE" ]; then
        echo "Transcoding job already running, exiting."
    fi
    touch ${MY_LOCK_FILE}

    MY_FILENAME_EXT=".*\.\(avi\|wmv\|flv\|mp4\|mkv\)"
    MY_FILENAME_PREFIX=transcoded_
    MY_PRESET_FILE="$DOTFILES/bin/handbrake/profiles/$MY_PRESET_NAME.json"

    echo "Started: $(date)"

    find "$MY_TRANSCODE_PATH" -type f -iregex "$MY_FILENAME_EXT" \( ! -iname "$MY_FILENAME_PREFIX*" \) -print0 > ${MY_TRANSCODE_LIST}

    while IFS= read -r -d $'\0' MY_FILENAME <&3; do
        MY_FILENAME_PATH=$(dirname "$MY_FILENAME")
        MY_FILENAME_NAME=$(basename "$MY_FILENAME")
        MY_FILENAME_SRC=${MY_FILENAME_PATH}/${MY_FILENAME_NAME}
        MY_FILENAME_DST=${MY_FILENAME_PATH}/${MY_FILENAME_PREFIX}${MY_FILENAME_NAME}
        if [ -f "$MY_FILENAME_DST" ]; then
            echo "Already transcoded, skipping: $MY_FILENAME_SRC" 
            continue
        fi
        echo "Transcoding: $MY_FILENAME_SRC -> $MY_FILENAME_DST"
        HandBrakeCLI --preset-import-file "$MY_PRESET_FILE" -i "$MY_FILENAME_SRC" -o "$MY_FILENAME_DST" --preset="$MY_PRESET_NAME" > /dev/null 2>&1
    done 3< ${MY_TRANSCODE_LIST};

    echo "Ended: $(date)"

    rm ${MY_TRANSCODE_LIST}
    rm ${MY_LOCK_FILE}
}
