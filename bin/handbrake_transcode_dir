#!/bin/bash

# For Ubuntu, use:
# sudo add-apt-repository ppa:stebbins/handbrake-releases && sudo apt-get update
# apt-get install handbrake-cli

MY_LOCK_FILE=/tmp/handbrake_transcode_dir.lock
MY_TRANSCODE_LIST=/tmp/handbrake_transcode_dir.list

function cleanup
{
    echo "[$(date)] Cleaning up ..."
    rm ${MY_TRANSCODE_LIST}
    rm ${MY_LOCK_FILE}
}

function sig_trap
{
    echo "[$(date)] Signal caught, exiting"
    cleanup
    exit 1 # This unfortunately also exits the terminal
}

function print_help
{
    echo "Usage: $0 </path/to/dir> --profile <path/to/handbrake-profile>.json"
    exit 1
}

trap sig_trap 1 2 3 6

if [ $# -lt 1 ]; then
    print_help
fi

MY_PROFILE_FILE=""
MY_DO_FORCE=""
MY_DO_REPLACE=""

while [ $# != 0 ]; do
    CUR_PARM="$1"
    shift
    case "$CUR_PARM" in
        --profile)
            MY_PROFILE_FILE="$1"
            shift
            ;;
        --force)
            MY_DO_FORCE=1
            ;;
        --replace)
            MY_DO_REPLACE=1
            ;;
        --help)
            print_help
            ;;
        *)
            if [ -z "$MY_TRANSCODE_PATH" ]; then
                MY_TRANSCODE_PATH="$CUR_PARM"
            else
                echo "ERROR: Unknown option \"$CUR_PARM\"" 1>&2
                echo "" 1>&2
                print_help
            fi
            ;;
    esac
done

which ffprobe &> /dev/null
if [ $? -ne 0 ]; then
    echo "ffprobe not installed. Aborting." >&2
    exit 1
fi

which HandBrakeCLI &> /dev/null
if [ $? -ne 0 ]; then
    echo "HandBrakeCLI not installed. Aborting." >&2
    exit 1
fi

if [ -z "$MY_PROFILE_FILE" ]; then 
    echo "No profile specified. Use --profile <path/to/profile.json> to set."
    print_help
fi

if [ -f "$MY_LOCK_FILE" ]; then
    echo "Transcoding job already running, exiting."
    exit 2
fi
touch ${MY_LOCK_FILE}

MY_FILENAME_EXT=".*\.\(avi\|wmv\|mpg\|mp4\|mkv\)"
MY_FILENAME_SUFFIX_ORIGINAL=_original
MY_FILENAME_PREFIX_TRANSCODED=transcoded_
MY_FILENAME_SUFFIX_TRANSCODED=_transcoded

MY_PROFILE_NAME=$(basename -s .json "$MY_PROFILE_FILE")

echo "[$(date)] Started: $MY_TRANSCODE_PATH (using $MY_PROFILE_FILE)"

if [ -n "$MY_DO_FORCE" ]; then
    find "$MY_TRANSCODE_PATH" -type f -iregex "$MY_FILENAME_EXT" -print0 > ${MY_TRANSCODE_LIST}
else
    find "$MY_TRANSCODE_PATH" -type f -iregex "$MY_FILENAME_EXT" \( ! -iname "*$MY_FILENAME_SUFFIX_TRANSCODED*" -a ! -iname "*$MY_FILENAME_SUFFIX_ORIGINAL*" \) -print0 > ${MY_TRANSCODE_LIST}
fi

# Note: This script *must* run with bash as interpreter, as otherwise "read -r" will *not* work!
while IFS= read -r -d $'\0' MY_FILENAME <&3; do
    MY_FILENAME_PATH=$(dirname "$MY_FILENAME")
    MY_FILENAME_NAME=$(basename "$MY_FILENAME")
    MY_FILENAME_SRC=${MY_FILENAME_PATH}/${MY_FILENAME_NAME}
    MY_FILENAME_EXT=$(echo ${MY_FILENAME_NAME} | awk -F . '{if (NF>1) {print $NF}}')
    MY_FILENAME_NAME_NO_EXT=$(basename "$MY_FILENAME" .${MY_FILENAME_EXT})
    MY_FILENAME_DST=${MY_FILENAME_PATH}/${MY_FILENAME_NAME_NO_EXT}${MY_FILENAME_SUFFIX_TRANSCODED}.${MY_FILENAME_EXT}
    MY_FILENAME_DST_OLD_SCHEME=${MY_FILENAME_PATH}/${MY_FILENAME_PREFIX_TRANSCODED}${MY_FILENAME_NAME}
    MY_FILENAME_LOG=${MY_FILENAME_DST}.log

    MY_SRC_CODEC_TYPE=$(ffprobe -v error -hide_banner -of default=noprint_wrappers=1:nokey=1 -select_streams v:0 -show_entries stream=codec_name "$MY_FILENAME_SRC")

    if [ $? -ne 0 ]; then
        echo "[$(date)] Unable to determine codec type, skipping: $MY_FILENAME_SRC"
        continue
    fi

    echo "[$(date)] File: $MY_FILENAME_SRC ($MY_SRC_CODEC_TYPE)"

    if [ "$MY_SRC_CODEC_TYPE" == "hevc" ]; then
        echo "[$(date)] Already transcoded, skipping: $MY_FILENAME_SRC"
        continue
    fi
    if [ -f "$MY_FILENAME_DST" ]; then
        echo "[$(date)] Destination file already exists, skipping: $MY_FILENAME_SRC"
        continue
    fi
    if [ -f "$MY_FILENAME_DST_OLD_SCHEME" ]; then
        echo "[$(date)] Destination file (old scheme) already exists, skipping: $MY_FILENAME_SRC"
        continue
    fi
    echo "[$(date)] Transcoding started: $MY_FILENAME_SRC ($MY_SRC_CODEC_TYPE) -> $MY_FILENAME_DST"
    HandBrakeCLI --preset-import-file "$MY_PROFILE_FILE" -i "$MY_FILENAME_SRC" -o "$MY_FILENAME_DST" --preset="$MY_PROFILE_NAME" 2>&1 | tee "$MY_FILENAME_LOG" > /dev/null 2>&1
    if [ $? -ne 0 ]; then
        echo "[$(date)] Error transcoding file: $MY_FILENAME_SRC"
        rm "$MY_FILENAME_DST" > /dev/null 2>&1 # Delete partially encoded file again.
        # Keep the log file.
    else
        echo "[$(date)] Transcoding successful: $MY_FILENAME_SRC"
        rm "$MY_FILENAME_LOG" # Remove the log file on success.
        if [ -n "$MY_DO_REPLACE" ]; then
            echo "[$(date)] Replacing $MY_FILENAME_SRC"
            mv "$MY_FILENAME_SRC" "${MY_FILENAME_PATH}/${MY_FILENAME_NAME_NO_EXT}${MY_FILENAME_SUFFIX_ORIGINAL}.${MY_FILENAME_EXT}" && mv "$MY_FILENAME_DST" "$MY_FILENAME_SRC"
        fi
    fi
done 3< ${MY_TRANSCODE_LIST};

echo "[$(date)] Ended"

cleanup
